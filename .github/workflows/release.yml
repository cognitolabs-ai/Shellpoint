name: Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY_GH: ghcr.io
  REGISTRY_DH: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-and-security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test || true # Skip if no tests

      - name: Security audit
        run: npm audit --audit-level=moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build-and-release:
    runs-on: ubuntu-latest
    needs: test-and-security
    permissions:
      contents: write
      packages: write

    strategy:
      matrix:
        registry: [ghcr, dockerhub]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry == 'ghcr' && env.REGISTRY_GH || env.REGISTRY_DH }}
          username: ${{ matrix.registry == 'ghcr' && github.actor || secrets.DOCKERHUB_USERNAME }}
          password: ${{ matrix.registry == 'ghcr' && secrets.GITHUB_TOKEN || secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.registry == 'ghcr' && env.REGISTRY_GH || env.REGISTRY_DH }}/${{ matrix.registry == 'ghcr' && github.repository || 'cognitiolabs/shellpoint' }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        if: matrix.registry == 'ghcr'
        with:
          image: ${{ env.REGISTRY_GH }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        if: matrix.registry == 'ghcr'
        with:
          name: sbom
          path: sbom.spdx.json

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-release
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          body: |
            ## ShellPoint ${{ steps.version.outputs.VERSION }}

            üöÄ **Professional web-based SSH client by CognitioLabs**

            üê≥ **Docker Images Available:**
            - **GitHub Registry:** `ghcr.io/cognitiolabs/shellpoint:${{ steps.version.outputs.VERSION }}`
            - **Docker Hub:** `cognitiolabs/shellpoint:${{ steps.version.outputs.VERSION }}`

            ‚ö° **Quick Start:**
            ```bash
            # Using GitHub Registry
            docker run -d \
              -p 8080:8080 \
              -e JWT_SECRET="your-secret-key" \
              -v shellpoint-data:/app/data \
              ghcr.io/cognitiolabs/shellpoint:${{ steps.version.outputs.VERSION }}

            # Using Docker Hub
            docker run -d \
              -p 8080:8080 \
              -e JWT_SECRET="your-secret-key" \
              -v shellpoint-data:/app/data \
              cognitiolabs/shellpoint:${{ steps.version.outputs.VERSION }}
            ```

            üìã **What's New:**
            ${{ github.event.head_commit.message }}

            üìñ **Documentation:** [See README.md](https://github.com/${{ github.repository }}/blob/main/README.md)
            üîß **Issues:** [Report bugs and feature requests](https://github.com/${{ github.repository }}/issues)
          files: |
            CHANGELOG.md
            SBOM.*.json || true
