# Production Environment Template for ShellPoint
# Copy this file to .env.production and update with your secure values
# NEVER commit actual secrets to version control!

# ============================================================================
# SECURITY - REQUIRED
# ============================================================================

# JWT Secret Key - GENERATE NEW ONE FOR PRODUCTION!
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=GENERATE_YOUR_JWT_SECRET_HERE

# ============================================================================
# CORE CONFIGURATION
# ============================================================================

# Environment
NODE_ENV=production

# Server Port (internal, behind reverse proxy)
PORT=8080

# Database Path
DB_PATH=/app/data/ssh-client.db

# Domain for production (used for cookies, CORS)
DOMAIN=yourdomain.com

# ============================================================================
# SECURITY SETTINGS
# ============================================================================

# Session Configuration
SESSION_TIMEOUT=7d
COOKIE_SECURE=true
COOKIE_SAME_SITE=strict

# Rate Limiting
RATE_LIMIT_WINDOW=15m
RATE_LIMIT_MAX=100

# Maximum concurrent SSH connections
MAX_CONNECTIONS=100

# Security Headers
HELMET_ENABLED=true
CORS_ORIGIN=https://yourdomain.com

# ============================================================================
# LOGGING & MONITORING
# ============================================================================

# Log Level (error, warn, info, debug)
LOG_LEVEL=info

# Log Format (json, text)
LOG_FORMAT=json

# Log File (optional, defaults to console)
LOG_FILE=/app/data/logs/application.log

# Metrics
METRICS_ENABLED=true
METRICS_PORT=9090
METRICS_PATH=/metrics

# ============================================================================
# PERFORMANCE
# ============================================================================

# Compression
COMPRESSION=true

# Static caching
STATIC_CACHE_MAX_AGE=1d

# Database optimization
DB_WAL_MODE=true
DB_CACHE_SIZE=2000
DB_SYNCHRONOUS=NORMAL

# ============================================================================
# BACKUP CONFIGURATION
# ============================================================================

# Auto backup enabled
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # 2 AM daily
BACKUP_RETENTION_DAYS=7

# Backup location
BACKUP_DIR=/app/data/backups

# ============================================================================
# DATABASE ENCRYPTION (OPTIONAL - ADVANCED)
# ============================================================================

# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# DB_ENCRYPTION_KEY=GENERATE_YOUR_ENCRYPTION_KEY_HERE

# ============================================================================
# EXTERNAL SERVICES
# ============================================================================

# Email notifications (optional)
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASS=
EMAIL_FROM=noreply@yourdomain.com

# External monitoring (optional)
HEALTH_CHECK_URL=https://healthchecks.yourdomain.com/ping/your-uuid

# ============================================================================
# LEGACY COMPATIBILITY
# ============================================================================

# Leave empty, not used
DEV_PASSWORD=

# ============================================================================
# DEPLOYMENT GUIDELINES
# ============================================================================

# 1. Replace JWT_SECRET with cryptographically secure random string
# 2. Update DOMAIN to your actual domain
# 3. Configure reverse proxy (nginx/traefik) for HTTPS
# 4. Set proper CORS_ORIGIN
# 5. Configure logging and monitoring
# 6. Test all settings with staging deployment
# 7. Backup your database regularly
# 8. Monitor resource usage and security logs

# ============================================================================
# QUICK CHECKLIST
# ============================================================================

# [ ] JWT_SECRET replaced with 64+ character random string
# [ ] DOMAIN and CORS_ORIGIN updated
# [ ] HTTPS configured in reverse proxy
# [ ] Backup strategy implemented
# [ ] Monitoring configured
# [ ] Security headers enabled
# [ ] Rate limiting configured
# [ ] Resource limits set
# [ ] Log rotation planned
# [ ] SSL certificates valid
